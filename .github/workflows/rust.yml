name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4  
    
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable  
      with:
        components: clippy, rustfmt
    
    - name: Cache cargo dependencies
      uses: actions/cache@v4  # Updated to v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build (Debug)
      run: cargo build --verbose
    
    - name: Build (Release)
      run: cargo build --verbose --release
    
    - name: Run tests
      run: cargo test --verbose

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-audit
        run: cargo install --locked cargo-audit
      
      - name: Run cargo-audit
        run: cargo audit

  build-and-push:
    name: Build and Push to GitHub Container Registry
    runs-on: ubuntu-latest
    needs: [build, security_audit]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        run: |
          # Build and push to GitHub Container Registry
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/prox"
          IMAGE_TAG="${IMAGE_NAME}:main-${{ github.sha }}"
          LATEST_TAG="${IMAGE_NAME}:latest"
          
          docker build -t "${IMAGE_TAG}" -t "${LATEST_TAG}" .
          docker push "${IMAGE_TAG}"
          docker push "${LATEST_TAG}"
          
          echo "âœ… Docker images built and pushed successfully to GHCR!"
          echo "Image tags:"
          echo "  - ${IMAGE_TAG}"
          echo "  - ${LATEST_TAG}"
          
          echo ""
          echo "ðŸš€ To deploy to Kubernetes, run locally:"
          echo "  ./k8s/deploy.sh"
